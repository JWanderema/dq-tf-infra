eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGluaXQ6CiAgICBpbWFnZTogY2hyaXNucy9kb2NrZXItdGVycmFncnVudAogICAgY29tbWFuZHM6CiAgICAgIC0gdGVycmFncnVudCBpbml0CgogIHRlc3RzdWl0ZToKICAgIGltYWdlOiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvZHEtdGYtdGVzdHN1aXRlOmxhdGVzdAogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgY29tbWFuZHM6IHJ1bgoKICB2YWxpZGF0ZToKICAgIGltYWdlOiBjaHJpc25zL2RvY2tlci10ZXJyYWdydW50CiAgICBjb21tYW5kczoKICAgICAgLSB0ZXJyYWdydW50IHZhbGlkYXRlCgogIHBsYW46CiAgICBpbWFnZTogY2hyaXNucy9kb2NrZXItdGVycmFncnVudAogICAgY29tbWFuZHM6CiAgICAgIC0gdGVycmFncnVudCBwbGFuCgogIGdyYXBoOgogICAgaW1hZ2U6IGNocmlzbnMvZG9ja2VyLXRlcnJhZ3J1bnQKICAgIGNvbW1hbmRzOgogICAgICAtIHRlcnJhZ3J1bnQgZ3JhcGgKCiAgYXBwbHk6CiAgICBpbWFnZTogY2hyaXNucy9kb2NrZXItdGVycmFncnVudAogICAgY29tbWFuZHM6CiAgICAgIC0gdGVycmFncnVudCBhcHBseSAtYXV0by1hcHByb3ZlCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgoKICBjbGVhbl91cDoKICAgIGltYWdlOiBjaHJpc25zL2RvY2tlci10ZXJyYWdydW50CiAgICBjb21tYW5kczoKICAgICAgLSB0ZXJyYWdydW50IGRlc3Ryb3kgLWZvcmNlCiAgICB3aGVuOgogICAgICBzdGF0dXM6IFsgZmFpbHVyZSwgc3VjY2VzcyBdCiAgICAgIGJyYW5jaDogbWFzdGVy.fjrM7jKU67rcD3hdJWzsTGOZBcSAWgnxwpX36XxerfA